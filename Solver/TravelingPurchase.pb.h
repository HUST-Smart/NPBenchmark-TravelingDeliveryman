// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: TravelingPurchase.proto

#ifndef PROTOBUF_INCLUDED_TravelingPurchase_2eproto
#define PROTOBUF_INCLUDED_TravelingPurchase_2eproto

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3006001
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#define PROTOBUF_INTERNAL_EXPORT_protobuf_TravelingPurchase_2eproto 

namespace protobuf_TravelingPurchase_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[8];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
}  // namespace protobuf_TravelingPurchase_2eproto
namespace pb {
class Edge;
class EdgeDefaultTypeInternal;
extern EdgeDefaultTypeInternal _Edge_default_instance_;
class NodeRequired;
class NodeRequiredDefaultTypeInternal;
extern NodeRequiredDefaultTypeInternal _NodeRequired_default_instance_;
class NodeidAtmoment;
class NodeidAtmomentDefaultTypeInternal;
extern NodeidAtmomentDefaultTypeInternal _NodeidAtmoment_default_instance_;
class TravelingPurchase;
class TravelingPurchaseDefaultTypeInternal;
extern TravelingPurchaseDefaultTypeInternal _TravelingPurchase_default_instance_;
class TravelingPurchase_Input;
class TravelingPurchase_InputDefaultTypeInternal;
extern TravelingPurchase_InputDefaultTypeInternal _TravelingPurchase_Input_default_instance_;
class TravelingPurchase_Output;
class TravelingPurchase_OutputDefaultTypeInternal;
extern TravelingPurchase_OutputDefaultTypeInternal _TravelingPurchase_Output_default_instance_;
class TravelingPurchase_Submission;
class TravelingPurchase_SubmissionDefaultTypeInternal;
extern TravelingPurchase_SubmissionDefaultTypeInternal _TravelingPurchase_Submission_default_instance_;
class ValueAtMoment;
class ValueAtMomentDefaultTypeInternal;
extern ValueAtMomentDefaultTypeInternal _ValueAtMoment_default_instance_;
}  // namespace pb
namespace google {
namespace protobuf {
template<> ::pb::Edge* Arena::CreateMaybeMessage<::pb::Edge>(Arena*);
template<> ::pb::NodeRequired* Arena::CreateMaybeMessage<::pb::NodeRequired>(Arena*);
template<> ::pb::NodeidAtmoment* Arena::CreateMaybeMessage<::pb::NodeidAtmoment>(Arena*);
template<> ::pb::TravelingPurchase* Arena::CreateMaybeMessage<::pb::TravelingPurchase>(Arena*);
template<> ::pb::TravelingPurchase_Input* Arena::CreateMaybeMessage<::pb::TravelingPurchase_Input>(Arena*);
template<> ::pb::TravelingPurchase_Output* Arena::CreateMaybeMessage<::pb::TravelingPurchase_Output>(Arena*);
template<> ::pb::TravelingPurchase_Submission* Arena::CreateMaybeMessage<::pb::TravelingPurchase_Submission>(Arena*);
template<> ::pb::ValueAtMoment* Arena::CreateMaybeMessage<::pb::ValueAtMoment>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace pb {

// ===================================================================

class TravelingPurchase_Input : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:pb.TravelingPurchase.Input) */ {
 public:
  TravelingPurchase_Input();
  virtual ~TravelingPurchase_Input();

  TravelingPurchase_Input(const TravelingPurchase_Input& from);

  inline TravelingPurchase_Input& operator=(const TravelingPurchase_Input& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TravelingPurchase_Input(TravelingPurchase_Input&& from) noexcept
    : TravelingPurchase_Input() {
    *this = ::std::move(from);
  }

  inline TravelingPurchase_Input& operator=(TravelingPurchase_Input&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const TravelingPurchase_Input& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const TravelingPurchase_Input* internal_default_instance() {
    return reinterpret_cast<const TravelingPurchase_Input*>(
               &_TravelingPurchase_Input_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(TravelingPurchase_Input* other);
  friend void swap(TravelingPurchase_Input& a, TravelingPurchase_Input& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TravelingPurchase_Input* New() const final {
    return CreateMaybeMessage<TravelingPurchase_Input>(NULL);
  }

  TravelingPurchase_Input* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<TravelingPurchase_Input>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const TravelingPurchase_Input& from);
  void MergeFrom(const TravelingPurchase_Input& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(TravelingPurchase_Input* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated int32 nodeid = 1;
  int nodeid_size() const;
  void clear_nodeid();
  static const int kNodeidFieldNumber = 1;
  ::google::protobuf::int32 nodeid(int index) const;
  void set_nodeid(int index, ::google::protobuf::int32 value);
  void add_nodeid(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      nodeid() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_nodeid();

  // repeated .pb.Edge edges = 2;
  int edges_size() const;
  void clear_edges();
  static const int kEdgesFieldNumber = 2;
  ::pb::Edge* mutable_edges(int index);
  ::google::protobuf::RepeatedPtrField< ::pb::Edge >*
      mutable_edges();
  const ::pb::Edge& edges(int index) const;
  ::pb::Edge* add_edges();
  const ::google::protobuf::RepeatedPtrField< ::pb::Edge >&
      edges() const;

  // repeated .pb.NodeRequired nodeRequireds = 3;
  int noderequireds_size() const;
  void clear_noderequireds();
  static const int kNodeRequiredsFieldNumber = 3;
  ::pb::NodeRequired* mutable_noderequireds(int index);
  ::google::protobuf::RepeatedPtrField< ::pb::NodeRequired >*
      mutable_noderequireds();
  const ::pb::NodeRequired& noderequireds(int index) const;
  ::pb::NodeRequired* add_noderequireds();
  const ::google::protobuf::RepeatedPtrField< ::pb::NodeRequired >&
      noderequireds() const;

  // int32 sourceNode = 4;
  void clear_sourcenode();
  static const int kSourceNodeFieldNumber = 4;
  ::google::protobuf::int32 sourcenode() const;
  void set_sourcenode(::google::protobuf::int32 value);

  // int32 targetNode = 5;
  void clear_targetnode();
  static const int kTargetNodeFieldNumber = 5;
  ::google::protobuf::int32 targetnode() const;
  void set_targetnode(::google::protobuf::int32 value);

  // int32 periodLength = 6;
  void clear_periodlength();
  static const int kPeriodLengthFieldNumber = 6;
  ::google::protobuf::int32 periodlength() const;
  void set_periodlength(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:pb.TravelingPurchase.Input)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > nodeid_;
  mutable int _nodeid_cached_byte_size_;
  ::google::protobuf::RepeatedPtrField< ::pb::Edge > edges_;
  ::google::protobuf::RepeatedPtrField< ::pb::NodeRequired > noderequireds_;
  ::google::protobuf::int32 sourcenode_;
  ::google::protobuf::int32 targetnode_;
  ::google::protobuf::int32 periodlength_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_TravelingPurchase_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class TravelingPurchase_Output : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:pb.TravelingPurchase.Output) */ {
 public:
  TravelingPurchase_Output();
  virtual ~TravelingPurchase_Output();

  TravelingPurchase_Output(const TravelingPurchase_Output& from);

  inline TravelingPurchase_Output& operator=(const TravelingPurchase_Output& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TravelingPurchase_Output(TravelingPurchase_Output&& from) noexcept
    : TravelingPurchase_Output() {
    *this = ::std::move(from);
  }

  inline TravelingPurchase_Output& operator=(TravelingPurchase_Output&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const TravelingPurchase_Output& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const TravelingPurchase_Output* internal_default_instance() {
    return reinterpret_cast<const TravelingPurchase_Output*>(
               &_TravelingPurchase_Output_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  void Swap(TravelingPurchase_Output* other);
  friend void swap(TravelingPurchase_Output& a, TravelingPurchase_Output& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TravelingPurchase_Output* New() const final {
    return CreateMaybeMessage<TravelingPurchase_Output>(NULL);
  }

  TravelingPurchase_Output* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<TravelingPurchase_Output>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const TravelingPurchase_Output& from);
  void MergeFrom(const TravelingPurchase_Output& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(TravelingPurchase_Output* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .pb.NodeidAtmoment nodeidAtmoment = 1;
  int nodeidatmoment_size() const;
  void clear_nodeidatmoment();
  static const int kNodeidAtmomentFieldNumber = 1;
  ::pb::NodeidAtmoment* mutable_nodeidatmoment(int index);
  ::google::protobuf::RepeatedPtrField< ::pb::NodeidAtmoment >*
      mutable_nodeidatmoment();
  const ::pb::NodeidAtmoment& nodeidatmoment(int index) const;
  ::pb::NodeidAtmoment* add_nodeidatmoment();
  const ::google::protobuf::RepeatedPtrField< ::pb::NodeidAtmoment >&
      nodeidatmoment() const;

  // @@protoc_insertion_point(class_scope:pb.TravelingPurchase.Output)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::pb::NodeidAtmoment > nodeidatmoment_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_TravelingPurchase_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class TravelingPurchase_Submission : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:pb.TravelingPurchase.Submission) */ {
 public:
  TravelingPurchase_Submission();
  virtual ~TravelingPurchase_Submission();

  TravelingPurchase_Submission(const TravelingPurchase_Submission& from);

  inline TravelingPurchase_Submission& operator=(const TravelingPurchase_Submission& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TravelingPurchase_Submission(TravelingPurchase_Submission&& from) noexcept
    : TravelingPurchase_Submission() {
    *this = ::std::move(from);
  }

  inline TravelingPurchase_Submission& operator=(TravelingPurchase_Submission&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const TravelingPurchase_Submission& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const TravelingPurchase_Submission* internal_default_instance() {
    return reinterpret_cast<const TravelingPurchase_Submission*>(
               &_TravelingPurchase_Submission_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  void Swap(TravelingPurchase_Submission* other);
  friend void swap(TravelingPurchase_Submission& a, TravelingPurchase_Submission& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TravelingPurchase_Submission* New() const final {
    return CreateMaybeMessage<TravelingPurchase_Submission>(NULL);
  }

  TravelingPurchase_Submission* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<TravelingPurchase_Submission>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const TravelingPurchase_Submission& from);
  void MergeFrom(const TravelingPurchase_Submission& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(TravelingPurchase_Submission* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string author = 1;
  void clear_author();
  static const int kAuthorFieldNumber = 1;
  const ::std::string& author() const;
  void set_author(const ::std::string& value);
  #if LANG_CXX11
  void set_author(::std::string&& value);
  #endif
  void set_author(const char* value);
  void set_author(const char* value, size_t size);
  ::std::string* mutable_author();
  ::std::string* release_author();
  void set_allocated_author(::std::string* author);

  // string algorithm = 2;
  void clear_algorithm();
  static const int kAlgorithmFieldNumber = 2;
  const ::std::string& algorithm() const;
  void set_algorithm(const ::std::string& value);
  #if LANG_CXX11
  void set_algorithm(::std::string&& value);
  #endif
  void set_algorithm(const char* value);
  void set_algorithm(const char* value, size_t size);
  ::std::string* mutable_algorithm();
  ::std::string* release_algorithm();
  void set_allocated_algorithm(::std::string* algorithm);

  // string thread = 3;
  void clear_thread();
  static const int kThreadFieldNumber = 3;
  const ::std::string& thread() const;
  void set_thread(const ::std::string& value);
  #if LANG_CXX11
  void set_thread(::std::string&& value);
  #endif
  void set_thread(const char* value);
  void set_thread(const char* value, size_t size);
  ::std::string* mutable_thread();
  ::std::string* release_thread();
  void set_allocated_thread(::std::string* thread);

  // string cpu = 4;
  void clear_cpu();
  static const int kCpuFieldNumber = 4;
  const ::std::string& cpu() const;
  void set_cpu(const ::std::string& value);
  #if LANG_CXX11
  void set_cpu(::std::string&& value);
  #endif
  void set_cpu(const char* value);
  void set_cpu(const char* value, size_t size);
  ::std::string* mutable_cpu();
  ::std::string* release_cpu();
  void set_allocated_cpu(::std::string* cpu);

  // string ram = 5;
  void clear_ram();
  static const int kRamFieldNumber = 5;
  const ::std::string& ram() const;
  void set_ram(const ::std::string& value);
  #if LANG_CXX11
  void set_ram(::std::string&& value);
  #endif
  void set_ram(const char* value);
  void set_ram(const char* value, size_t size);
  ::std::string* mutable_ram();
  ::std::string* release_ram();
  void set_allocated_ram(::std::string* ram);

  // string language = 6;
  void clear_language();
  static const int kLanguageFieldNumber = 6;
  const ::std::string& language() const;
  void set_language(const ::std::string& value);
  #if LANG_CXX11
  void set_language(::std::string&& value);
  #endif
  void set_language(const char* value);
  void set_language(const char* value, size_t size);
  ::std::string* mutable_language();
  ::std::string* release_language();
  void set_allocated_language(::std::string* language);

  // string compiler = 7;
  void clear_compiler();
  static const int kCompilerFieldNumber = 7;
  const ::std::string& compiler() const;
  void set_compiler(const ::std::string& value);
  #if LANG_CXX11
  void set_compiler(::std::string&& value);
  #endif
  void set_compiler(const char* value);
  void set_compiler(const char* value, size_t size);
  ::std::string* mutable_compiler();
  ::std::string* release_compiler();
  void set_allocated_compiler(::std::string* compiler);

  // string os = 8;
  void clear_os();
  static const int kOsFieldNumber = 8;
  const ::std::string& os() const;
  void set_os(const ::std::string& value);
  #if LANG_CXX11
  void set_os(::std::string&& value);
  #endif
  void set_os(const char* value);
  void set_os(const char* value, size_t size);
  ::std::string* mutable_os();
  ::std::string* release_os();
  void set_allocated_os(::std::string* os);

  // string problem = 21;
  void clear_problem();
  static const int kProblemFieldNumber = 21;
  const ::std::string& problem() const;
  void set_problem(const ::std::string& value);
  #if LANG_CXX11
  void set_problem(::std::string&& value);
  #endif
  void set_problem(const char* value);
  void set_problem(const char* value, size_t size);
  ::std::string* mutable_problem();
  ::std::string* release_problem();
  void set_allocated_problem(::std::string* problem);

  // string instance = 22;
  void clear_instance();
  static const int kInstanceFieldNumber = 22;
  const ::std::string& instance() const;
  void set_instance(const ::std::string& value);
  #if LANG_CXX11
  void set_instance(::std::string&& value);
  #endif
  void set_instance(const char* value);
  void set_instance(const char* value, size_t size);
  ::std::string* mutable_instance();
  ::std::string* release_instance();
  void set_allocated_instance(::std::string* instance);

  // string duration = 23;
  void clear_duration();
  static const int kDurationFieldNumber = 23;
  const ::std::string& duration() const;
  void set_duration(const ::std::string& value);
  #if LANG_CXX11
  void set_duration(::std::string&& value);
  #endif
  void set_duration(const char* value);
  void set_duration(const char* value, size_t size);
  ::std::string* mutable_duration();
  ::std::string* release_duration();
  void set_allocated_duration(::std::string* duration);

  // string email = 32;
  void clear_email();
  static const int kEmailFieldNumber = 32;
  const ::std::string& email() const;
  void set_email(const ::std::string& value);
  #if LANG_CXX11
  void set_email(::std::string&& value);
  #endif
  void set_email(const char* value);
  void set_email(const char* value, size_t size);
  ::std::string* mutable_email();
  ::std::string* release_email();
  void set_allocated_email(::std::string* email);

  // string date = 33;
  void clear_date();
  static const int kDateFieldNumber = 33;
  const ::std::string& date() const;
  void set_date(const ::std::string& value);
  #if LANG_CXX11
  void set_date(::std::string&& value);
  #endif
  void set_date(const char* value);
  void set_date(const char* value, size_t size);
  ::std::string* mutable_date();
  ::std::string* release_date();
  void set_allocated_date(::std::string* date);

  // double obj = 31;
  void clear_obj();
  static const int kObjFieldNumber = 31;
  double obj() const;
  void set_obj(double value);

  // @@protoc_insertion_point(class_scope:pb.TravelingPurchase.Submission)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr author_;
  ::google::protobuf::internal::ArenaStringPtr algorithm_;
  ::google::protobuf::internal::ArenaStringPtr thread_;
  ::google::protobuf::internal::ArenaStringPtr cpu_;
  ::google::protobuf::internal::ArenaStringPtr ram_;
  ::google::protobuf::internal::ArenaStringPtr language_;
  ::google::protobuf::internal::ArenaStringPtr compiler_;
  ::google::protobuf::internal::ArenaStringPtr os_;
  ::google::protobuf::internal::ArenaStringPtr problem_;
  ::google::protobuf::internal::ArenaStringPtr instance_;
  ::google::protobuf::internal::ArenaStringPtr duration_;
  ::google::protobuf::internal::ArenaStringPtr email_;
  ::google::protobuf::internal::ArenaStringPtr date_;
  double obj_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_TravelingPurchase_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class TravelingPurchase : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:pb.TravelingPurchase) */ {
 public:
  TravelingPurchase();
  virtual ~TravelingPurchase();

  TravelingPurchase(const TravelingPurchase& from);

  inline TravelingPurchase& operator=(const TravelingPurchase& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TravelingPurchase(TravelingPurchase&& from) noexcept
    : TravelingPurchase() {
    *this = ::std::move(from);
  }

  inline TravelingPurchase& operator=(TravelingPurchase&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const TravelingPurchase& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const TravelingPurchase* internal_default_instance() {
    return reinterpret_cast<const TravelingPurchase*>(
               &_TravelingPurchase_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  void Swap(TravelingPurchase* other);
  friend void swap(TravelingPurchase& a, TravelingPurchase& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TravelingPurchase* New() const final {
    return CreateMaybeMessage<TravelingPurchase>(NULL);
  }

  TravelingPurchase* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<TravelingPurchase>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const TravelingPurchase& from);
  void MergeFrom(const TravelingPurchase& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(TravelingPurchase* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef TravelingPurchase_Input Input;
  typedef TravelingPurchase_Output Output;
  typedef TravelingPurchase_Submission Submission;

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:pb.TravelingPurchase)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_TravelingPurchase_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Edge : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:pb.Edge) */ {
 public:
  Edge();
  virtual ~Edge();

  Edge(const Edge& from);

  inline Edge& operator=(const Edge& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Edge(Edge&& from) noexcept
    : Edge() {
    *this = ::std::move(from);
  }

  inline Edge& operator=(Edge&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Edge& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Edge* internal_default_instance() {
    return reinterpret_cast<const Edge*>(
               &_Edge_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  void Swap(Edge* other);
  friend void swap(Edge& a, Edge& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Edge* New() const final {
    return CreateMaybeMessage<Edge>(NULL);
  }

  Edge* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Edge>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Edge& from);
  void MergeFrom(const Edge& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Edge* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int32 id = 1;
  void clear_id();
  static const int kIdFieldNumber = 1;
  ::google::protobuf::int32 id() const;
  void set_id(::google::protobuf::int32 value);

  // int32 cost = 2;
  void clear_cost();
  static const int kCostFieldNumber = 2;
  ::google::protobuf::int32 cost() const;
  void set_cost(::google::protobuf::int32 value);

  // int32 source = 3;
  void clear_source();
  static const int kSourceFieldNumber = 3;
  ::google::protobuf::int32 source() const;
  void set_source(::google::protobuf::int32 value);

  // int32 target = 4;
  void clear_target();
  static const int kTargetFieldNumber = 4;
  ::google::protobuf::int32 target() const;
  void set_target(::google::protobuf::int32 value);

  // int32 minTime = 5;
  void clear_mintime();
  static const int kMinTimeFieldNumber = 5;
  ::google::protobuf::int32 mintime() const;
  void set_mintime(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:pb.Edge)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int32 id_;
  ::google::protobuf::int32 cost_;
  ::google::protobuf::int32 source_;
  ::google::protobuf::int32 target_;
  ::google::protobuf::int32 mintime_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_TravelingPurchase_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class NodeRequired : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:pb.NodeRequired) */ {
 public:
  NodeRequired();
  virtual ~NodeRequired();

  NodeRequired(const NodeRequired& from);

  inline NodeRequired& operator=(const NodeRequired& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  NodeRequired(NodeRequired&& from) noexcept
    : NodeRequired() {
    *this = ::std::move(from);
  }

  inline NodeRequired& operator=(NodeRequired&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const NodeRequired& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const NodeRequired* internal_default_instance() {
    return reinterpret_cast<const NodeRequired*>(
               &_NodeRequired_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  void Swap(NodeRequired* other);
  friend void swap(NodeRequired& a, NodeRequired& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline NodeRequired* New() const final {
    return CreateMaybeMessage<NodeRequired>(NULL);
  }

  NodeRequired* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<NodeRequired>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const NodeRequired& from);
  void MergeFrom(const NodeRequired& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(NodeRequired* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .pb.ValueAtMoment valueAtMoments = 2;
  int valueatmoments_size() const;
  void clear_valueatmoments();
  static const int kValueAtMomentsFieldNumber = 2;
  ::pb::ValueAtMoment* mutable_valueatmoments(int index);
  ::google::protobuf::RepeatedPtrField< ::pb::ValueAtMoment >*
      mutable_valueatmoments();
  const ::pb::ValueAtMoment& valueatmoments(int index) const;
  ::pb::ValueAtMoment* add_valueatmoments();
  const ::google::protobuf::RepeatedPtrField< ::pb::ValueAtMoment >&
      valueatmoments() const;

  // int32 id = 1;
  void clear_id();
  static const int kIdFieldNumber = 1;
  ::google::protobuf::int32 id() const;
  void set_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:pb.NodeRequired)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::pb::ValueAtMoment > valueatmoments_;
  ::google::protobuf::int32 id_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_TravelingPurchase_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ValueAtMoment : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:pb.ValueAtMoment) */ {
 public:
  ValueAtMoment();
  virtual ~ValueAtMoment();

  ValueAtMoment(const ValueAtMoment& from);

  inline ValueAtMoment& operator=(const ValueAtMoment& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ValueAtMoment(ValueAtMoment&& from) noexcept
    : ValueAtMoment() {
    *this = ::std::move(from);
  }

  inline ValueAtMoment& operator=(ValueAtMoment&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ValueAtMoment& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ValueAtMoment* internal_default_instance() {
    return reinterpret_cast<const ValueAtMoment*>(
               &_ValueAtMoment_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    6;

  void Swap(ValueAtMoment* other);
  friend void swap(ValueAtMoment& a, ValueAtMoment& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ValueAtMoment* New() const final {
    return CreateMaybeMessage<ValueAtMoment>(NULL);
  }

  ValueAtMoment* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ValueAtMoment>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ValueAtMoment& from);
  void MergeFrom(const ValueAtMoment& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ValueAtMoment* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int32 moment = 1;
  void clear_moment();
  static const int kMomentFieldNumber = 1;
  ::google::protobuf::int32 moment() const;
  void set_moment(::google::protobuf::int32 value);

  // int32 value = 2;
  void clear_value();
  static const int kValueFieldNumber = 2;
  ::google::protobuf::int32 value() const;
  void set_value(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:pb.ValueAtMoment)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int32 moment_;
  ::google::protobuf::int32 value_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_TravelingPurchase_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class NodeidAtmoment : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:pb.NodeidAtmoment) */ {
 public:
  NodeidAtmoment();
  virtual ~NodeidAtmoment();

  NodeidAtmoment(const NodeidAtmoment& from);

  inline NodeidAtmoment& operator=(const NodeidAtmoment& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  NodeidAtmoment(NodeidAtmoment&& from) noexcept
    : NodeidAtmoment() {
    *this = ::std::move(from);
  }

  inline NodeidAtmoment& operator=(NodeidAtmoment&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const NodeidAtmoment& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const NodeidAtmoment* internal_default_instance() {
    return reinterpret_cast<const NodeidAtmoment*>(
               &_NodeidAtmoment_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    7;

  void Swap(NodeidAtmoment* other);
  friend void swap(NodeidAtmoment& a, NodeidAtmoment& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline NodeidAtmoment* New() const final {
    return CreateMaybeMessage<NodeidAtmoment>(NULL);
  }

  NodeidAtmoment* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<NodeidAtmoment>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const NodeidAtmoment& from);
  void MergeFrom(const NodeidAtmoment& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(NodeidAtmoment* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int32 moment = 1;
  void clear_moment();
  static const int kMomentFieldNumber = 1;
  ::google::protobuf::int32 moment() const;
  void set_moment(::google::protobuf::int32 value);

  // int32 nodeid = 2;
  void clear_nodeid();
  static const int kNodeidFieldNumber = 2;
  ::google::protobuf::int32 nodeid() const;
  void set_nodeid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:pb.NodeidAtmoment)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int32 moment_;
  ::google::protobuf::int32 nodeid_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_TravelingPurchase_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// TravelingPurchase_Input

// repeated int32 nodeid = 1;
inline int TravelingPurchase_Input::nodeid_size() const {
  return nodeid_.size();
}
inline void TravelingPurchase_Input::clear_nodeid() {
  nodeid_.Clear();
}
inline ::google::protobuf::int32 TravelingPurchase_Input::nodeid(int index) const {
  // @@protoc_insertion_point(field_get:pb.TravelingPurchase.Input.nodeid)
  return nodeid_.Get(index);
}
inline void TravelingPurchase_Input::set_nodeid(int index, ::google::protobuf::int32 value) {
  nodeid_.Set(index, value);
  // @@protoc_insertion_point(field_set:pb.TravelingPurchase.Input.nodeid)
}
inline void TravelingPurchase_Input::add_nodeid(::google::protobuf::int32 value) {
  nodeid_.Add(value);
  // @@protoc_insertion_point(field_add:pb.TravelingPurchase.Input.nodeid)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
TravelingPurchase_Input::nodeid() const {
  // @@protoc_insertion_point(field_list:pb.TravelingPurchase.Input.nodeid)
  return nodeid_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
TravelingPurchase_Input::mutable_nodeid() {
  // @@protoc_insertion_point(field_mutable_list:pb.TravelingPurchase.Input.nodeid)
  return &nodeid_;
}

// repeated .pb.Edge edges = 2;
inline int TravelingPurchase_Input::edges_size() const {
  return edges_.size();
}
inline void TravelingPurchase_Input::clear_edges() {
  edges_.Clear();
}
inline ::pb::Edge* TravelingPurchase_Input::mutable_edges(int index) {
  // @@protoc_insertion_point(field_mutable:pb.TravelingPurchase.Input.edges)
  return edges_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::pb::Edge >*
TravelingPurchase_Input::mutable_edges() {
  // @@protoc_insertion_point(field_mutable_list:pb.TravelingPurchase.Input.edges)
  return &edges_;
}
inline const ::pb::Edge& TravelingPurchase_Input::edges(int index) const {
  // @@protoc_insertion_point(field_get:pb.TravelingPurchase.Input.edges)
  return edges_.Get(index);
}
inline ::pb::Edge* TravelingPurchase_Input::add_edges() {
  // @@protoc_insertion_point(field_add:pb.TravelingPurchase.Input.edges)
  return edges_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::pb::Edge >&
TravelingPurchase_Input::edges() const {
  // @@protoc_insertion_point(field_list:pb.TravelingPurchase.Input.edges)
  return edges_;
}

// repeated .pb.NodeRequired nodeRequireds = 3;
inline int TravelingPurchase_Input::noderequireds_size() const {
  return noderequireds_.size();
}
inline void TravelingPurchase_Input::clear_noderequireds() {
  noderequireds_.Clear();
}
inline ::pb::NodeRequired* TravelingPurchase_Input::mutable_noderequireds(int index) {
  // @@protoc_insertion_point(field_mutable:pb.TravelingPurchase.Input.nodeRequireds)
  return noderequireds_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::pb::NodeRequired >*
TravelingPurchase_Input::mutable_noderequireds() {
  // @@protoc_insertion_point(field_mutable_list:pb.TravelingPurchase.Input.nodeRequireds)
  return &noderequireds_;
}
inline const ::pb::NodeRequired& TravelingPurchase_Input::noderequireds(int index) const {
  // @@protoc_insertion_point(field_get:pb.TravelingPurchase.Input.nodeRequireds)
  return noderequireds_.Get(index);
}
inline ::pb::NodeRequired* TravelingPurchase_Input::add_noderequireds() {
  // @@protoc_insertion_point(field_add:pb.TravelingPurchase.Input.nodeRequireds)
  return noderequireds_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::pb::NodeRequired >&
TravelingPurchase_Input::noderequireds() const {
  // @@protoc_insertion_point(field_list:pb.TravelingPurchase.Input.nodeRequireds)
  return noderequireds_;
}

// int32 sourceNode = 4;
inline void TravelingPurchase_Input::clear_sourcenode() {
  sourcenode_ = 0;
}
inline ::google::protobuf::int32 TravelingPurchase_Input::sourcenode() const {
  // @@protoc_insertion_point(field_get:pb.TravelingPurchase.Input.sourceNode)
  return sourcenode_;
}
inline void TravelingPurchase_Input::set_sourcenode(::google::protobuf::int32 value) {
  
  sourcenode_ = value;
  // @@protoc_insertion_point(field_set:pb.TravelingPurchase.Input.sourceNode)
}

// int32 targetNode = 5;
inline void TravelingPurchase_Input::clear_targetnode() {
  targetnode_ = 0;
}
inline ::google::protobuf::int32 TravelingPurchase_Input::targetnode() const {
  // @@protoc_insertion_point(field_get:pb.TravelingPurchase.Input.targetNode)
  return targetnode_;
}
inline void TravelingPurchase_Input::set_targetnode(::google::protobuf::int32 value) {
  
  targetnode_ = value;
  // @@protoc_insertion_point(field_set:pb.TravelingPurchase.Input.targetNode)
}

// int32 periodLength = 6;
inline void TravelingPurchase_Input::clear_periodlength() {
  periodlength_ = 0;
}
inline ::google::protobuf::int32 TravelingPurchase_Input::periodlength() const {
  // @@protoc_insertion_point(field_get:pb.TravelingPurchase.Input.periodLength)
  return periodlength_;
}
inline void TravelingPurchase_Input::set_periodlength(::google::protobuf::int32 value) {
  
  periodlength_ = value;
  // @@protoc_insertion_point(field_set:pb.TravelingPurchase.Input.periodLength)
}

// -------------------------------------------------------------------

// TravelingPurchase_Output

// repeated .pb.NodeidAtmoment nodeidAtmoment = 1;
inline int TravelingPurchase_Output::nodeidatmoment_size() const {
  return nodeidatmoment_.size();
}
inline void TravelingPurchase_Output::clear_nodeidatmoment() {
  nodeidatmoment_.Clear();
}
inline ::pb::NodeidAtmoment* TravelingPurchase_Output::mutable_nodeidatmoment(int index) {
  // @@protoc_insertion_point(field_mutable:pb.TravelingPurchase.Output.nodeidAtmoment)
  return nodeidatmoment_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::pb::NodeidAtmoment >*
TravelingPurchase_Output::mutable_nodeidatmoment() {
  // @@protoc_insertion_point(field_mutable_list:pb.TravelingPurchase.Output.nodeidAtmoment)
  return &nodeidatmoment_;
}
inline const ::pb::NodeidAtmoment& TravelingPurchase_Output::nodeidatmoment(int index) const {
  // @@protoc_insertion_point(field_get:pb.TravelingPurchase.Output.nodeidAtmoment)
  return nodeidatmoment_.Get(index);
}
inline ::pb::NodeidAtmoment* TravelingPurchase_Output::add_nodeidatmoment() {
  // @@protoc_insertion_point(field_add:pb.TravelingPurchase.Output.nodeidAtmoment)
  return nodeidatmoment_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::pb::NodeidAtmoment >&
TravelingPurchase_Output::nodeidatmoment() const {
  // @@protoc_insertion_point(field_list:pb.TravelingPurchase.Output.nodeidAtmoment)
  return nodeidatmoment_;
}

// -------------------------------------------------------------------

// TravelingPurchase_Submission

// string author = 1;
inline void TravelingPurchase_Submission::clear_author() {
  author_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& TravelingPurchase_Submission::author() const {
  // @@protoc_insertion_point(field_get:pb.TravelingPurchase.Submission.author)
  return author_.GetNoArena();
}
inline void TravelingPurchase_Submission::set_author(const ::std::string& value) {
  
  author_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:pb.TravelingPurchase.Submission.author)
}
#if LANG_CXX11
inline void TravelingPurchase_Submission::set_author(::std::string&& value) {
  
  author_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:pb.TravelingPurchase.Submission.author)
}
#endif
inline void TravelingPurchase_Submission::set_author(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  author_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pb.TravelingPurchase.Submission.author)
}
inline void TravelingPurchase_Submission::set_author(const char* value, size_t size) {
  
  author_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pb.TravelingPurchase.Submission.author)
}
inline ::std::string* TravelingPurchase_Submission::mutable_author() {
  
  // @@protoc_insertion_point(field_mutable:pb.TravelingPurchase.Submission.author)
  return author_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* TravelingPurchase_Submission::release_author() {
  // @@protoc_insertion_point(field_release:pb.TravelingPurchase.Submission.author)
  
  return author_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void TravelingPurchase_Submission::set_allocated_author(::std::string* author) {
  if (author != NULL) {
    
  } else {
    
  }
  author_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), author);
  // @@protoc_insertion_point(field_set_allocated:pb.TravelingPurchase.Submission.author)
}

// string algorithm = 2;
inline void TravelingPurchase_Submission::clear_algorithm() {
  algorithm_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& TravelingPurchase_Submission::algorithm() const {
  // @@protoc_insertion_point(field_get:pb.TravelingPurchase.Submission.algorithm)
  return algorithm_.GetNoArena();
}
inline void TravelingPurchase_Submission::set_algorithm(const ::std::string& value) {
  
  algorithm_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:pb.TravelingPurchase.Submission.algorithm)
}
#if LANG_CXX11
inline void TravelingPurchase_Submission::set_algorithm(::std::string&& value) {
  
  algorithm_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:pb.TravelingPurchase.Submission.algorithm)
}
#endif
inline void TravelingPurchase_Submission::set_algorithm(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  algorithm_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pb.TravelingPurchase.Submission.algorithm)
}
inline void TravelingPurchase_Submission::set_algorithm(const char* value, size_t size) {
  
  algorithm_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pb.TravelingPurchase.Submission.algorithm)
}
inline ::std::string* TravelingPurchase_Submission::mutable_algorithm() {
  
  // @@protoc_insertion_point(field_mutable:pb.TravelingPurchase.Submission.algorithm)
  return algorithm_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* TravelingPurchase_Submission::release_algorithm() {
  // @@protoc_insertion_point(field_release:pb.TravelingPurchase.Submission.algorithm)
  
  return algorithm_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void TravelingPurchase_Submission::set_allocated_algorithm(::std::string* algorithm) {
  if (algorithm != NULL) {
    
  } else {
    
  }
  algorithm_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), algorithm);
  // @@protoc_insertion_point(field_set_allocated:pb.TravelingPurchase.Submission.algorithm)
}

// string thread = 3;
inline void TravelingPurchase_Submission::clear_thread() {
  thread_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& TravelingPurchase_Submission::thread() const {
  // @@protoc_insertion_point(field_get:pb.TravelingPurchase.Submission.thread)
  return thread_.GetNoArena();
}
inline void TravelingPurchase_Submission::set_thread(const ::std::string& value) {
  
  thread_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:pb.TravelingPurchase.Submission.thread)
}
#if LANG_CXX11
inline void TravelingPurchase_Submission::set_thread(::std::string&& value) {
  
  thread_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:pb.TravelingPurchase.Submission.thread)
}
#endif
inline void TravelingPurchase_Submission::set_thread(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  thread_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pb.TravelingPurchase.Submission.thread)
}
inline void TravelingPurchase_Submission::set_thread(const char* value, size_t size) {
  
  thread_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pb.TravelingPurchase.Submission.thread)
}
inline ::std::string* TravelingPurchase_Submission::mutable_thread() {
  
  // @@protoc_insertion_point(field_mutable:pb.TravelingPurchase.Submission.thread)
  return thread_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* TravelingPurchase_Submission::release_thread() {
  // @@protoc_insertion_point(field_release:pb.TravelingPurchase.Submission.thread)
  
  return thread_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void TravelingPurchase_Submission::set_allocated_thread(::std::string* thread) {
  if (thread != NULL) {
    
  } else {
    
  }
  thread_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), thread);
  // @@protoc_insertion_point(field_set_allocated:pb.TravelingPurchase.Submission.thread)
}

// string cpu = 4;
inline void TravelingPurchase_Submission::clear_cpu() {
  cpu_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& TravelingPurchase_Submission::cpu() const {
  // @@protoc_insertion_point(field_get:pb.TravelingPurchase.Submission.cpu)
  return cpu_.GetNoArena();
}
inline void TravelingPurchase_Submission::set_cpu(const ::std::string& value) {
  
  cpu_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:pb.TravelingPurchase.Submission.cpu)
}
#if LANG_CXX11
inline void TravelingPurchase_Submission::set_cpu(::std::string&& value) {
  
  cpu_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:pb.TravelingPurchase.Submission.cpu)
}
#endif
inline void TravelingPurchase_Submission::set_cpu(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  cpu_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pb.TravelingPurchase.Submission.cpu)
}
inline void TravelingPurchase_Submission::set_cpu(const char* value, size_t size) {
  
  cpu_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pb.TravelingPurchase.Submission.cpu)
}
inline ::std::string* TravelingPurchase_Submission::mutable_cpu() {
  
  // @@protoc_insertion_point(field_mutable:pb.TravelingPurchase.Submission.cpu)
  return cpu_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* TravelingPurchase_Submission::release_cpu() {
  // @@protoc_insertion_point(field_release:pb.TravelingPurchase.Submission.cpu)
  
  return cpu_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void TravelingPurchase_Submission::set_allocated_cpu(::std::string* cpu) {
  if (cpu != NULL) {
    
  } else {
    
  }
  cpu_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), cpu);
  // @@protoc_insertion_point(field_set_allocated:pb.TravelingPurchase.Submission.cpu)
}

// string ram = 5;
inline void TravelingPurchase_Submission::clear_ram() {
  ram_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& TravelingPurchase_Submission::ram() const {
  // @@protoc_insertion_point(field_get:pb.TravelingPurchase.Submission.ram)
  return ram_.GetNoArena();
}
inline void TravelingPurchase_Submission::set_ram(const ::std::string& value) {
  
  ram_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:pb.TravelingPurchase.Submission.ram)
}
#if LANG_CXX11
inline void TravelingPurchase_Submission::set_ram(::std::string&& value) {
  
  ram_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:pb.TravelingPurchase.Submission.ram)
}
#endif
inline void TravelingPurchase_Submission::set_ram(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  ram_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pb.TravelingPurchase.Submission.ram)
}
inline void TravelingPurchase_Submission::set_ram(const char* value, size_t size) {
  
  ram_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pb.TravelingPurchase.Submission.ram)
}
inline ::std::string* TravelingPurchase_Submission::mutable_ram() {
  
  // @@protoc_insertion_point(field_mutable:pb.TravelingPurchase.Submission.ram)
  return ram_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* TravelingPurchase_Submission::release_ram() {
  // @@protoc_insertion_point(field_release:pb.TravelingPurchase.Submission.ram)
  
  return ram_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void TravelingPurchase_Submission::set_allocated_ram(::std::string* ram) {
  if (ram != NULL) {
    
  } else {
    
  }
  ram_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ram);
  // @@protoc_insertion_point(field_set_allocated:pb.TravelingPurchase.Submission.ram)
}

// string language = 6;
inline void TravelingPurchase_Submission::clear_language() {
  language_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& TravelingPurchase_Submission::language() const {
  // @@protoc_insertion_point(field_get:pb.TravelingPurchase.Submission.language)
  return language_.GetNoArena();
}
inline void TravelingPurchase_Submission::set_language(const ::std::string& value) {
  
  language_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:pb.TravelingPurchase.Submission.language)
}
#if LANG_CXX11
inline void TravelingPurchase_Submission::set_language(::std::string&& value) {
  
  language_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:pb.TravelingPurchase.Submission.language)
}
#endif
inline void TravelingPurchase_Submission::set_language(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  language_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pb.TravelingPurchase.Submission.language)
}
inline void TravelingPurchase_Submission::set_language(const char* value, size_t size) {
  
  language_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pb.TravelingPurchase.Submission.language)
}
inline ::std::string* TravelingPurchase_Submission::mutable_language() {
  
  // @@protoc_insertion_point(field_mutable:pb.TravelingPurchase.Submission.language)
  return language_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* TravelingPurchase_Submission::release_language() {
  // @@protoc_insertion_point(field_release:pb.TravelingPurchase.Submission.language)
  
  return language_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void TravelingPurchase_Submission::set_allocated_language(::std::string* language) {
  if (language != NULL) {
    
  } else {
    
  }
  language_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), language);
  // @@protoc_insertion_point(field_set_allocated:pb.TravelingPurchase.Submission.language)
}

// string compiler = 7;
inline void TravelingPurchase_Submission::clear_compiler() {
  compiler_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& TravelingPurchase_Submission::compiler() const {
  // @@protoc_insertion_point(field_get:pb.TravelingPurchase.Submission.compiler)
  return compiler_.GetNoArena();
}
inline void TravelingPurchase_Submission::set_compiler(const ::std::string& value) {
  
  compiler_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:pb.TravelingPurchase.Submission.compiler)
}
#if LANG_CXX11
inline void TravelingPurchase_Submission::set_compiler(::std::string&& value) {
  
  compiler_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:pb.TravelingPurchase.Submission.compiler)
}
#endif
inline void TravelingPurchase_Submission::set_compiler(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  compiler_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pb.TravelingPurchase.Submission.compiler)
}
inline void TravelingPurchase_Submission::set_compiler(const char* value, size_t size) {
  
  compiler_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pb.TravelingPurchase.Submission.compiler)
}
inline ::std::string* TravelingPurchase_Submission::mutable_compiler() {
  
  // @@protoc_insertion_point(field_mutable:pb.TravelingPurchase.Submission.compiler)
  return compiler_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* TravelingPurchase_Submission::release_compiler() {
  // @@protoc_insertion_point(field_release:pb.TravelingPurchase.Submission.compiler)
  
  return compiler_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void TravelingPurchase_Submission::set_allocated_compiler(::std::string* compiler) {
  if (compiler != NULL) {
    
  } else {
    
  }
  compiler_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), compiler);
  // @@protoc_insertion_point(field_set_allocated:pb.TravelingPurchase.Submission.compiler)
}

// string os = 8;
inline void TravelingPurchase_Submission::clear_os() {
  os_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& TravelingPurchase_Submission::os() const {
  // @@protoc_insertion_point(field_get:pb.TravelingPurchase.Submission.os)
  return os_.GetNoArena();
}
inline void TravelingPurchase_Submission::set_os(const ::std::string& value) {
  
  os_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:pb.TravelingPurchase.Submission.os)
}
#if LANG_CXX11
inline void TravelingPurchase_Submission::set_os(::std::string&& value) {
  
  os_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:pb.TravelingPurchase.Submission.os)
}
#endif
inline void TravelingPurchase_Submission::set_os(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  os_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pb.TravelingPurchase.Submission.os)
}
inline void TravelingPurchase_Submission::set_os(const char* value, size_t size) {
  
  os_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pb.TravelingPurchase.Submission.os)
}
inline ::std::string* TravelingPurchase_Submission::mutable_os() {
  
  // @@protoc_insertion_point(field_mutable:pb.TravelingPurchase.Submission.os)
  return os_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* TravelingPurchase_Submission::release_os() {
  // @@protoc_insertion_point(field_release:pb.TravelingPurchase.Submission.os)
  
  return os_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void TravelingPurchase_Submission::set_allocated_os(::std::string* os) {
  if (os != NULL) {
    
  } else {
    
  }
  os_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), os);
  // @@protoc_insertion_point(field_set_allocated:pb.TravelingPurchase.Submission.os)
}

// string problem = 21;
inline void TravelingPurchase_Submission::clear_problem() {
  problem_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& TravelingPurchase_Submission::problem() const {
  // @@protoc_insertion_point(field_get:pb.TravelingPurchase.Submission.problem)
  return problem_.GetNoArena();
}
inline void TravelingPurchase_Submission::set_problem(const ::std::string& value) {
  
  problem_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:pb.TravelingPurchase.Submission.problem)
}
#if LANG_CXX11
inline void TravelingPurchase_Submission::set_problem(::std::string&& value) {
  
  problem_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:pb.TravelingPurchase.Submission.problem)
}
#endif
inline void TravelingPurchase_Submission::set_problem(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  problem_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pb.TravelingPurchase.Submission.problem)
}
inline void TravelingPurchase_Submission::set_problem(const char* value, size_t size) {
  
  problem_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pb.TravelingPurchase.Submission.problem)
}
inline ::std::string* TravelingPurchase_Submission::mutable_problem() {
  
  // @@protoc_insertion_point(field_mutable:pb.TravelingPurchase.Submission.problem)
  return problem_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* TravelingPurchase_Submission::release_problem() {
  // @@protoc_insertion_point(field_release:pb.TravelingPurchase.Submission.problem)
  
  return problem_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void TravelingPurchase_Submission::set_allocated_problem(::std::string* problem) {
  if (problem != NULL) {
    
  } else {
    
  }
  problem_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), problem);
  // @@protoc_insertion_point(field_set_allocated:pb.TravelingPurchase.Submission.problem)
}

// string instance = 22;
inline void TravelingPurchase_Submission::clear_instance() {
  instance_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& TravelingPurchase_Submission::instance() const {
  // @@protoc_insertion_point(field_get:pb.TravelingPurchase.Submission.instance)
  return instance_.GetNoArena();
}
inline void TravelingPurchase_Submission::set_instance(const ::std::string& value) {
  
  instance_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:pb.TravelingPurchase.Submission.instance)
}
#if LANG_CXX11
inline void TravelingPurchase_Submission::set_instance(::std::string&& value) {
  
  instance_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:pb.TravelingPurchase.Submission.instance)
}
#endif
inline void TravelingPurchase_Submission::set_instance(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  instance_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pb.TravelingPurchase.Submission.instance)
}
inline void TravelingPurchase_Submission::set_instance(const char* value, size_t size) {
  
  instance_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pb.TravelingPurchase.Submission.instance)
}
inline ::std::string* TravelingPurchase_Submission::mutable_instance() {
  
  // @@protoc_insertion_point(field_mutable:pb.TravelingPurchase.Submission.instance)
  return instance_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* TravelingPurchase_Submission::release_instance() {
  // @@protoc_insertion_point(field_release:pb.TravelingPurchase.Submission.instance)
  
  return instance_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void TravelingPurchase_Submission::set_allocated_instance(::std::string* instance) {
  if (instance != NULL) {
    
  } else {
    
  }
  instance_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), instance);
  // @@protoc_insertion_point(field_set_allocated:pb.TravelingPurchase.Submission.instance)
}

// string duration = 23;
inline void TravelingPurchase_Submission::clear_duration() {
  duration_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& TravelingPurchase_Submission::duration() const {
  // @@protoc_insertion_point(field_get:pb.TravelingPurchase.Submission.duration)
  return duration_.GetNoArena();
}
inline void TravelingPurchase_Submission::set_duration(const ::std::string& value) {
  
  duration_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:pb.TravelingPurchase.Submission.duration)
}
#if LANG_CXX11
inline void TravelingPurchase_Submission::set_duration(::std::string&& value) {
  
  duration_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:pb.TravelingPurchase.Submission.duration)
}
#endif
inline void TravelingPurchase_Submission::set_duration(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  duration_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pb.TravelingPurchase.Submission.duration)
}
inline void TravelingPurchase_Submission::set_duration(const char* value, size_t size) {
  
  duration_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pb.TravelingPurchase.Submission.duration)
}
inline ::std::string* TravelingPurchase_Submission::mutable_duration() {
  
  // @@protoc_insertion_point(field_mutable:pb.TravelingPurchase.Submission.duration)
  return duration_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* TravelingPurchase_Submission::release_duration() {
  // @@protoc_insertion_point(field_release:pb.TravelingPurchase.Submission.duration)
  
  return duration_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void TravelingPurchase_Submission::set_allocated_duration(::std::string* duration) {
  if (duration != NULL) {
    
  } else {
    
  }
  duration_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), duration);
  // @@protoc_insertion_point(field_set_allocated:pb.TravelingPurchase.Submission.duration)
}

// double obj = 31;
inline void TravelingPurchase_Submission::clear_obj() {
  obj_ = 0;
}
inline double TravelingPurchase_Submission::obj() const {
  // @@protoc_insertion_point(field_get:pb.TravelingPurchase.Submission.obj)
  return obj_;
}
inline void TravelingPurchase_Submission::set_obj(double value) {
  
  obj_ = value;
  // @@protoc_insertion_point(field_set:pb.TravelingPurchase.Submission.obj)
}

// string email = 32;
inline void TravelingPurchase_Submission::clear_email() {
  email_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& TravelingPurchase_Submission::email() const {
  // @@protoc_insertion_point(field_get:pb.TravelingPurchase.Submission.email)
  return email_.GetNoArena();
}
inline void TravelingPurchase_Submission::set_email(const ::std::string& value) {
  
  email_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:pb.TravelingPurchase.Submission.email)
}
#if LANG_CXX11
inline void TravelingPurchase_Submission::set_email(::std::string&& value) {
  
  email_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:pb.TravelingPurchase.Submission.email)
}
#endif
inline void TravelingPurchase_Submission::set_email(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  email_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pb.TravelingPurchase.Submission.email)
}
inline void TravelingPurchase_Submission::set_email(const char* value, size_t size) {
  
  email_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pb.TravelingPurchase.Submission.email)
}
inline ::std::string* TravelingPurchase_Submission::mutable_email() {
  
  // @@protoc_insertion_point(field_mutable:pb.TravelingPurchase.Submission.email)
  return email_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* TravelingPurchase_Submission::release_email() {
  // @@protoc_insertion_point(field_release:pb.TravelingPurchase.Submission.email)
  
  return email_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void TravelingPurchase_Submission::set_allocated_email(::std::string* email) {
  if (email != NULL) {
    
  } else {
    
  }
  email_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), email);
  // @@protoc_insertion_point(field_set_allocated:pb.TravelingPurchase.Submission.email)
}

// string date = 33;
inline void TravelingPurchase_Submission::clear_date() {
  date_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& TravelingPurchase_Submission::date() const {
  // @@protoc_insertion_point(field_get:pb.TravelingPurchase.Submission.date)
  return date_.GetNoArena();
}
inline void TravelingPurchase_Submission::set_date(const ::std::string& value) {
  
  date_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:pb.TravelingPurchase.Submission.date)
}
#if LANG_CXX11
inline void TravelingPurchase_Submission::set_date(::std::string&& value) {
  
  date_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:pb.TravelingPurchase.Submission.date)
}
#endif
inline void TravelingPurchase_Submission::set_date(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  date_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pb.TravelingPurchase.Submission.date)
}
inline void TravelingPurchase_Submission::set_date(const char* value, size_t size) {
  
  date_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pb.TravelingPurchase.Submission.date)
}
inline ::std::string* TravelingPurchase_Submission::mutable_date() {
  
  // @@protoc_insertion_point(field_mutable:pb.TravelingPurchase.Submission.date)
  return date_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* TravelingPurchase_Submission::release_date() {
  // @@protoc_insertion_point(field_release:pb.TravelingPurchase.Submission.date)
  
  return date_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void TravelingPurchase_Submission::set_allocated_date(::std::string* date) {
  if (date != NULL) {
    
  } else {
    
  }
  date_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), date);
  // @@protoc_insertion_point(field_set_allocated:pb.TravelingPurchase.Submission.date)
}

// -------------------------------------------------------------------

// TravelingPurchase

// -------------------------------------------------------------------

// Edge

// int32 id = 1;
inline void Edge::clear_id() {
  id_ = 0;
}
inline ::google::protobuf::int32 Edge::id() const {
  // @@protoc_insertion_point(field_get:pb.Edge.id)
  return id_;
}
inline void Edge::set_id(::google::protobuf::int32 value) {
  
  id_ = value;
  // @@protoc_insertion_point(field_set:pb.Edge.id)
}

// int32 cost = 2;
inline void Edge::clear_cost() {
  cost_ = 0;
}
inline ::google::protobuf::int32 Edge::cost() const {
  // @@protoc_insertion_point(field_get:pb.Edge.cost)
  return cost_;
}
inline void Edge::set_cost(::google::protobuf::int32 value) {
  
  cost_ = value;
  // @@protoc_insertion_point(field_set:pb.Edge.cost)
}

// int32 source = 3;
inline void Edge::clear_source() {
  source_ = 0;
}
inline ::google::protobuf::int32 Edge::source() const {
  // @@protoc_insertion_point(field_get:pb.Edge.source)
  return source_;
}
inline void Edge::set_source(::google::protobuf::int32 value) {
  
  source_ = value;
  // @@protoc_insertion_point(field_set:pb.Edge.source)
}

// int32 target = 4;
inline void Edge::clear_target() {
  target_ = 0;
}
inline ::google::protobuf::int32 Edge::target() const {
  // @@protoc_insertion_point(field_get:pb.Edge.target)
  return target_;
}
inline void Edge::set_target(::google::protobuf::int32 value) {
  
  target_ = value;
  // @@protoc_insertion_point(field_set:pb.Edge.target)
}

// int32 minTime = 5;
inline void Edge::clear_mintime() {
  mintime_ = 0;
}
inline ::google::protobuf::int32 Edge::mintime() const {
  // @@protoc_insertion_point(field_get:pb.Edge.minTime)
  return mintime_;
}
inline void Edge::set_mintime(::google::protobuf::int32 value) {
  
  mintime_ = value;
  // @@protoc_insertion_point(field_set:pb.Edge.minTime)
}

// -------------------------------------------------------------------

// NodeRequired

// int32 id = 1;
inline void NodeRequired::clear_id() {
  id_ = 0;
}
inline ::google::protobuf::int32 NodeRequired::id() const {
  // @@protoc_insertion_point(field_get:pb.NodeRequired.id)
  return id_;
}
inline void NodeRequired::set_id(::google::protobuf::int32 value) {
  
  id_ = value;
  // @@protoc_insertion_point(field_set:pb.NodeRequired.id)
}

// repeated .pb.ValueAtMoment valueAtMoments = 2;
inline int NodeRequired::valueatmoments_size() const {
  return valueatmoments_.size();
}
inline void NodeRequired::clear_valueatmoments() {
  valueatmoments_.Clear();
}
inline ::pb::ValueAtMoment* NodeRequired::mutable_valueatmoments(int index) {
  // @@protoc_insertion_point(field_mutable:pb.NodeRequired.valueAtMoments)
  return valueatmoments_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::pb::ValueAtMoment >*
NodeRequired::mutable_valueatmoments() {
  // @@protoc_insertion_point(field_mutable_list:pb.NodeRequired.valueAtMoments)
  return &valueatmoments_;
}
inline const ::pb::ValueAtMoment& NodeRequired::valueatmoments(int index) const {
  // @@protoc_insertion_point(field_get:pb.NodeRequired.valueAtMoments)
  return valueatmoments_.Get(index);
}
inline ::pb::ValueAtMoment* NodeRequired::add_valueatmoments() {
  // @@protoc_insertion_point(field_add:pb.NodeRequired.valueAtMoments)
  return valueatmoments_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::pb::ValueAtMoment >&
NodeRequired::valueatmoments() const {
  // @@protoc_insertion_point(field_list:pb.NodeRequired.valueAtMoments)
  return valueatmoments_;
}

// -------------------------------------------------------------------

// ValueAtMoment

// int32 moment = 1;
inline void ValueAtMoment::clear_moment() {
  moment_ = 0;
}
inline ::google::protobuf::int32 ValueAtMoment::moment() const {
  // @@protoc_insertion_point(field_get:pb.ValueAtMoment.moment)
  return moment_;
}
inline void ValueAtMoment::set_moment(::google::protobuf::int32 value) {
  
  moment_ = value;
  // @@protoc_insertion_point(field_set:pb.ValueAtMoment.moment)
}

// int32 value = 2;
inline void ValueAtMoment::clear_value() {
  value_ = 0;
}
inline ::google::protobuf::int32 ValueAtMoment::value() const {
  // @@protoc_insertion_point(field_get:pb.ValueAtMoment.value)
  return value_;
}
inline void ValueAtMoment::set_value(::google::protobuf::int32 value) {
  
  value_ = value;
  // @@protoc_insertion_point(field_set:pb.ValueAtMoment.value)
}

// -------------------------------------------------------------------

// NodeidAtmoment

// int32 moment = 1;
inline void NodeidAtmoment::clear_moment() {
  moment_ = 0;
}
inline ::google::protobuf::int32 NodeidAtmoment::moment() const {
  // @@protoc_insertion_point(field_get:pb.NodeidAtmoment.moment)
  return moment_;
}
inline void NodeidAtmoment::set_moment(::google::protobuf::int32 value) {
  
  moment_ = value;
  // @@protoc_insertion_point(field_set:pb.NodeidAtmoment.moment)
}

// int32 nodeid = 2;
inline void NodeidAtmoment::clear_nodeid() {
  nodeid_ = 0;
}
inline ::google::protobuf::int32 NodeidAtmoment::nodeid() const {
  // @@protoc_insertion_point(field_get:pb.NodeidAtmoment.nodeid)
  return nodeid_;
}
inline void NodeidAtmoment::set_nodeid(::google::protobuf::int32 value) {
  
  nodeid_ = value;
  // @@protoc_insertion_point(field_set:pb.NodeidAtmoment.nodeid)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace pb

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_INCLUDED_TravelingPurchase_2eproto
